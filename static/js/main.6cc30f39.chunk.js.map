{"version":3,"sources":["components/Home.jsx","components/RandomRecipe.jsx","components/Content.jsx","components/MoreRandoms.jsx","components/SingleRecipe.jsx","components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["links","label","path","className","Home","map","link","to","RandomRecipe","state","singleRecipe","handleRecipeClick","id","props","history","push","fetchRecipes","a","axios","get","process","data","setState","console","log","recipes","this","src","image","alt","title","dishTypes","eachType","diets","eachDiet","Component","Content","onClick","component","MoreRandoms","SingleRecipe","Search","randomRecipeArr","selectedRecipe","randomRecipes","handleDeleteClick","then","newItem","clonedArr","concat","splice","eachRecipe","theRecipe","match","params","recipeDetails","steps","step","ingredientDetails","ingredientCopy","ingredients","flat","Infinity","ingredient","name","searchTerm","searchResults","handleSearch","e","search","target","value","getSearchResults","query","results","onChange","onKeyDown","event","keyCode","App","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cc30f39.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst links = [\n  { label: \"My calendar\", path: \"/content/calendar\", className: \"calendar\" },\n  {\n    label: \"Random recipes\",\n    path: \"/content/random\",\n    className: \"randomRecipes\"\n  },\n  {\n    label: \"Search for a recipe\",\n    path: \"/content/search\",\n    className: \"Search\"\n  },\n  {\n    label: \"Lots of Recipes\",\n    path: \"/content/morerandoms\",\n    className: \"lotsOfRandoms\"\n  }\n];\n\nconst Home = () =>\n  links.map(link => (\n    <button className={`${link.className} homeLink`}>\n      <Link to={link.path}>{link.label}</Link>\n    </button>\n  ));\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass RandomRecipe extends Component {\n  state = {\n    singleRecipe: null\n  };\n\n  componentDidMount() {\n    this.fetchRecipes();\n  }\n\n  handleRecipeClick = id => () => {\n    const { history } = this.props;\n    history.push(`/content/singleRecipe/${id}`);\n  };\n\n  fetchRecipes = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://api.spoonacular.com/recipes/random?apiKey=${process.env.REACT_APP_SPOON}`\n      );\n      this.setState({ singleRecipe: data });\n      console.log(data.recipes[0]);\n    } catch (e) {\n      console.log(\"Error fetching Recipes\", e);\n    }\n  };\n\n  render() {\n    const { singleRecipe } = this.state;\n    return (\n      <div>\n        <div className=\"randomRecipeCard\">\n          {singleRecipe && (\n            <div>\n              <img src={singleRecipe.recipes[0].image} alt=\"food pics\" />\n              <p>\n                <strong>{singleRecipe.recipes[0].title}</strong>\n              </p>\n              <div className=\"frontLists\">\n                <ul>\n                  <p>\n                    <strong>Dish type</strong>\n                  </p>\n                  {singleRecipe.recipes[0].dishTypes.map(eachType => (\n                    <li>{eachType}</li>\n                  ))}\n                </ul>\n                <ul>\n                  <p>\n                    <strong>Diet type</strong>\n                  </p>\n                  {singleRecipe.recipes[0].diets.map(eachDiet => (\n                    <li>{eachDiet}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          <button>Not a fan</button>\n          <button>More details!</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RandomRecipe;\n","import { Switch, Route } from \"react-router-dom\";\nimport { RandomRecipe, MoreRandoms, SingleRecipe, Search } from \".\";\nimport React from \"react\";\n\nconst Content = ({ history }) => {\n  const handleHomeClick = () => history.push(\"/\");\n\n  return (\n    <div className=\"mainContent\">\n      <button onClick={handleHomeClick}> Go Back</button>\n      <Switch>\n        <Route path=\"/content/random\" component={RandomRecipe} />\n        <Route path=\"/content/moreRandoms\" component={MoreRandoms} />\n        <Route path=\"/content/singleRecipe/:id\" component={SingleRecipe} />\n        <Route path=\"/content/Search\" component={Search} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass MoreRandoms extends Component {\n  state = {\n    randomRecipeArr: null,\n    selectedRecipe: []\n  };\n\n  componentDidMount() {\n    this.randomRecipes();\n  }\n\n  randomRecipes = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://api.spoonacular.com/recipes/random?number=3&apiKey=${process.env.REACT_APP_SPOON}`\n      );\n      this.setState({ randomRecipeArr: data });\n      console.log(data.recipes);\n    } catch (e) {\n      console.log(\"Error fetching Recipes\", e);\n    }\n  };\n\n  handleRecipeClick = id => () => {\n    const { history } = this.props;\n    console.log(id);\n    // localStorage.setItem(\"myID\", id);\n    // var storedId = localStorage.getItem(\"foodID\");\n    // console.log(storedId);\n    history.push(`/content/singleRecipe/${id}`);\n  };\n\n  handleDeleteClick = id => () => {\n    axios\n      .get(\n        `https://api.spoonacular.com/recipes/random?apiKey=${process.env.REACT_APP_SPOON}`\n      )\n      .then(newItem => {\n        let clonedArr = [...this.state.randomRecipeArr.recipes].concat(\n          newItem.data.recipes\n        );\n        clonedArr.splice(id, 1);\n        console.log(clonedArr, newItem.data);\n        this.setState({\n          randomRecipeArr: { recipes: clonedArr }\n        });\n        console.log(newItem);\n      });\n    // const newClonedArr = [...clonedArr.recipes, newItem.recipes];\n  };\n\n  render() {\n    const { randomRecipeArr } = this.state;\n    return (\n      <div>\n        {randomRecipeArr &&\n          randomRecipeArr.recipes.map(eachRecipe => (\n            <div className=\"randomRecipeCard\">\n              <div>\n                <img src={eachRecipe.image} alt=\"food pics\" />\n                <p>\n                  <strong>{eachRecipe.title}</strong>\n                </p>\n                <div className=\"frontLists\">\n                  <ul>\n                    <p>\n                      <strong>Dish type</strong>\n                    </p>\n                    {eachRecipe.dishTypes.map(eachType => (\n                      <li>{eachType}</li>\n                    ))}\n                  </ul>\n                  <ul>\n                    <p>\n                      <strong>Diet type</strong>\n                    </p>\n                    {eachRecipe.diets.map(eachDiet => (\n                      <li>{eachDiet}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <button onClick={this.handleDeleteClick(eachRecipe)}>\n                Not a fan\n              </button>\n              <button onClick={this.handleRecipeClick(eachRecipe.id)}>\n                Show details!\n              </button>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default MoreRandoms;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass SingleRecipe extends Component {\n  state = { theRecipe: null };\n\n  componentDidMount() {\n    console.log(\"this is the details page bro\");\n    this.fetchRecipes();\n    this.recipeDetails();\n    // this.testRequest();\n  }\n\n  fetchRecipes = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://api.spoonacular.com/recipes/${this.props.match.params.id}/analyzedInstructions?apiKey=${process.env.REACT_APP_SPOON}`\n      );\n      this.setState({ theRecipe: data[0] });\n      console.log(data[0]);\n    } catch (e) {\n      console.log(\"Error fetching Recipes\", e);\n    }\n  };\n\n  recipeDetails = () => {\n    console.log(\"running the details function\");\n    const { theRecipe } = this.state;\n\n    if (theRecipe !== null) {\n      console.log(theRecipe.steps);\n      let copy = theRecipe.steps.map(eachRecipe => (\n        <div>\n          <p>{eachRecipe.step}</p>\n        </div>\n      ));\n      return copy;\n    }\n  };\n\n  ingredientDetails = () => {\n    console.log(\"running the details function\");\n    const { theRecipe } = this.state;\n\n    if (theRecipe !== null) {\n      console.log(theRecipe.steps);\n      let ingredientCopy = theRecipe.steps.map(\n        eachRecipe => (eachRecipe = eachRecipe.ingredients)\n      );\n      ingredientCopy = ingredientCopy.flat(Infinity);\n      return ingredientCopy.map(ingredient => (\n        <ul>\n          <li>{ingredient.name}</li>\n        </ul>\n      ));\n    }\n  };\n\n  render() {\n    // const { theRecipe } = this.state;\n    this.recipeDetails();\n    console.log(\"this is the single recipe page\");\n    return (\n      <div>\n        {this.recipeDetails()}\n        {this.ingredientDetails()}\n      </div>\n    );\n  }\n}\n\nexport default SingleRecipe;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Search extends Component {\n  state = {\n    searchTerm: \"\",\n    searchResults: null\n  };\n  handleSearch = e => {\n    const search = e.target.value;\n    this.setState({ searchTerm: search });\n    console.log(search);\n  };\n  getSearchResults = () => {\n    let query = `https://api.spoonacular.com/recipes/search?query=${this.state.searchTerm}number=5&apiKey=${process.env.REACT_APP_SPOON}`;\n    console.log(query);\n    axios\n      .get(\n        `https://api.spoonacular.com/recipes/search?query=${this.state.searchTerm}&number=5&apiKey=${process.env.REACT_APP_SPOON}`\n      )\n      .then(results => this.setState({ searchResults: results }));\n  };\n\n  render() {\n    return (\n      <div>\n        <input\n          onChange={this.handleSearch}\n          onKeyDown={event => {\n            console.log(event);\n            if (event.keyCode === 13) {\n              console.log(\"hello\");\n              this.getSearchResults();\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import \"./App.css\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport {\n  Home,\n  Content,\n  RandomRecipe,\n  MoreRandoms,\n  SingleRecipe\n} from \"./components\";\n\nconsole.log(process.env);\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Home} exact />\n      <Route path=\"/content\" component={Content} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}